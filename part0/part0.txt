FUNDAMENTALS OF WEB APPS
------------------------

1st rule of web dev: always keep the console open!

HTTP GET

Server and browser communicate using the HTTP protocol.
Response headers tell us the size of the response in byte and the exact time of the response. Content-Type 
tells us what format the file is in.
Body is the structure of the page.

Traditional web apps:

These only fetch HTML data from the server, and all application logic is on the server. PHP style.

Event handlers and callback functions:

Event handler functions are called callback functions. The application code does not invoke the functions 
itself, but the runtime env - the browser, invokes the function
at an appropriate time when the event has occurred.

Document Object Model (DOM):

Document Object Model is an API that enables programmatic modification of the element trees corresponding
to web-pages.
JavaScript uses this API to alter the HTML code.
Changes to DOM through console are not permanent as the changes were not pushed to the server.

CSS:
The Elements tab of the console can be used to change the styles of the elements.

Forms and HTTP POST:
Data is sent as the body of the POST-request.
The server can access the data by accessing the req.body field of the request object req.

AJAX:
Asynchronous JavaScript and XML is an early noughties style of web dev. Advancements in browser tech
enabled the fetching of content to web pages using JS included within the HTML, without the need to 
rerender the page. Prior to AJAX, all web pages worked in like 'traditional web applications' where
all of the data shown on the page was fetched with the HTML-code generated by the server.

Single page app:

SPA-style websites don't fetch all of their pages separately from the server like the sample application
does, but instead are made with only one HTML page fetched from the server, the contents of which are
manipulated with JS that executes in the browser.

JavaScript libraries:
Instead of using vanilla JS and the DOM-API only, we have different libraries containing tools that are
easier to work with compared to the DOM-API and can be used to manipulate pages. jQuery was a popular
one.

React was made by Facebook and is currently the most popular tool for implementing the browser side
logic of web apps.

Full stack web dev:

Full stack just means we're going to focus on all parts of the app: the frontend, the backend, and the 
database.